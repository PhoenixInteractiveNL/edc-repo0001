** 2.0.0 released on 2005-12-31
*** started second decade of Atari800 development!

2005-12-31  Petr Stehlik  <pstehlik@sophics.cz>
* atari_falcon.c: 'fVDI' cookie almost surely indicates that we are running
  on a graphics card with no bitplanes support.
  <falcon.h> header file is in mint subfolder in newer mintlibs.


2005-12-30  Kostas Nakos <knakos@phys.uoa.gr>
* wince/*: code refinements

* DOC/INSTALL.wince: updated


2005-12-30  Piotr Fusik  <fox@scene.pl>
* cpu.[ch], mzpokeysnd.c, pokey.h, pokeysnd.c, remez.c: added conditional code
  for an external project derived from Atari800, see http://asap.sf.net


2005-12-29  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: keyboard joysticks:
  - removed secondary trigger key
  - added functions that list currently assigned keyboard joystick keys (for
    use in the UI to show user how the joystick is mapped)
  - SDL_X_TRIG renamed to SDL_JOY_X_TRIGGER (old config name still supported)
  - SDL_JOY_X_ENABLED added to config file (so you can enable/disable
    the keyboard joysticks and save that for future)

* ui.c: SDL keyboard joysticks: show how the joystick keys are mapped

* config.{guess, sub}: updated to versions from August 2005

* atari800.man: added -Hpath <path>

* DOC/FAQ: listed my solutions for keyboard joysticks and sound problems
  under SDL with GNOME ESD.

* atari800.spec, README.1ST, DOC/{README, NEWS}: updated for new release


2005-12-29  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: help line for the directory selector


2005-12-28  Petr Stehlik  <pstehlik@sophics.cz>
* sound_oss.c: handles situations when Pokey generated channels don't match
  the output channels - for example when stereo Pokey is to play on mono only
  card, or vice-versa. Also stereo Pokey compiled in but disabled at runtime
  now plays from both channels (not just the left one).


2005-12-27  Piotr Fusik  <fox@scene.pl>
* DOC/INSTALL.amiga: removed (completely obsolete)

* DOC/TODO: reorganized and added my ideas

* pokey.c: made initialization of poly17_lookup[] about 10 times faster


2005-12-05  Piotr Fusik  <fox@scene.pl>
* atari_ps2.c: sound support for the PS2


2005-11-30  Piotr Skamruk  <jellonek@knip.pol.lublin.pl>
* ui.c: options for enabling/disabling SDL keyboard joysticks


2005-11-26  Piotr Fusik  <fox@scene.pl>
* atari.c: fixed Atari_time() on the PS2

* atari.c: applied patch for *argc==0 (Chris)

* ui_basic.c: minor fix in FileSelector()


2005-11-24  Petr Stehlik  <pstehlik@sophics.cz>
* atari_sdl.c: keyboard joysticks don't pause games anymore. However, a
  runtime switch between keyboard joysticks and normal keyboard is needed.
  DOS/VGA uses <F7>. Will SDL use that or something else? Also some sort
  of visual indication (similar to disk drives lights) is needed otherwise
  users will get confused when half of their keyboard doesn't respond.


2005-11-19  Piotr Fusik  <fox@scene.pl>
* configure.ac, sound_oss.c, sound_unix.c: new OSS sound handling:
  - renamed sound_unix.c to sound_oss.c
  - added "-lossaudio" (necessary on NetBSD)
  - removed some advanced tricks (including "-snddelay" option),
    now writing samples for one Atari frame at once
  - implemented Sound_Pause() using SNDCTL_DSP_POST

* monitor.c: the output of "GTIA" command is now 7 lines instead of 5,
  but is much more readable (sprite registers are aligned)


2005-11-14  Piotr Fusik  <fox@scene.pl>
* configure.ac: R: device disabled by default (use "--enable-riodevice"
  at your own risk)

* atari_ps2.c: fixed timer_interrupt_id, but the timer code probably
  still won't work, so I wrapped it in USE_TIMERS

* ui_basic.c: added "[mc0:]" to file selector on PS2;
  use just one Win32 API call GetLogicalDrives() for all drive letters


2005-11-11  Piotr Fusik  <fox@scene.pl>
* configure.ac, amiga/config.h, win32/msc/config.h, wince/port/config.h,
  antic.c, cpu.c, memory.h, pokeysnd.c:
  UNALIGNED_LONG_OK -> WORDS_UNALIGNED_OK

* atari.[ch], antic.c, memory.h: STAT_UNALIGNED_WORDS

* binload.c, devices.c: dGetWord -> dGetWordAligned,
  dPutWord -> dPutWordAligned

* configure.ac: WORDS_UNALIGNED_OK now bases on the built-in
  CPU architecture database and can be overridden
  with "--enable-unalignedwords" / "--disable-unalignedwords"

* atari.c, atari_ps2.c: implemented Atari_time() and Atari_sleep() on PS2


2005-11-08  Piotr Fusik  <fox@scene.pl>
* atari_ps2.c, devices.c, ui_basic.c: support for directory listings on PS2
  ("mc0:" only)


2005-11-04  Piotr Fusik  <fox@scene.pl>
* monitor.c: pacified warnings on 64-bit CPUs


2005-11-03  Piotr Fusik  <fox@scene.pl>
* ui.c: "Uncompress disk image": there was a random message when the user
  cancelled output file selection

* sio.c: removed superfluous SIO_Dismount() - SIO_Mount() calls it


2005-11-02  Piotr Fusik  <fox@scene.pl>
* atari.c: RESET key in 400/800 does not reset chips, but only generates
  RNMI interrupt

* gtia.c: pacified warnings in no-NEW_CYCLE_EXACT build

* devices.c: pacified MSVCE warning in WORDS_BIGENDIAN build

* ui_basic.c: file selector shows empty directories on WinCE

* devices.c: H: directory listing with no matching entry now works on WinCE

* devices.[ch], ui.[ch]: "Advanced H: options"

* devices.c: fixed H: open mode 12 - now creates files that didn't exist;
  added H: open mode 13 - append and read (most Atari DOSes don't support it,
  but Sparta does)

* devices.c: H: MyDOS Load Executable command now works on open files
  (this is how MyDOS menu uses it)

* configure.ac, amiga/config.h, win32/msc/config.h, util.[ch], devices.c,
  sio.c: improved handling of temporary files:
  - temporary files with H: directory listing are deleted on WinCE
  - if available, tmpfile() is used for DCM and GZ disk images
    (no need to store names of temporary files)

* sio.c: fixed Aprint("%SIO... inside #ifdef DEBUG

* sio.c: drive status command ('S') now reports the density configured
  via PERCOM ('O') - MyDOS menu can reformat a disk with different sector size

* compfile.[ch]: rewritten from scratch. New DCM code is partially inspired
  by Ernest Schreurs' DCM2ATR utility:
  - DCMs that aren't Single/Double/Enhanced Density are now supported
    (example: double-sided disks)
  - DCM sector coding type 0x42 is now supported
  - DCM code is short, fast and clear (as opposed to old DCM code and DCM2ATR)

* ui.c: "Uncompress Disk Image" converts XFD.GZ to XFD, ATR.GZ to ATR,
  DCM to ATR

* win32/main.c: replaced WinMain() with main() so that MSVC-compiled version
  is a console application

* atari.[ch], atari_curses.c, atari_sdl.c, atari_svgalib.c,
  colours.c, compfile.c, devices.c, log.c, memory.c, monitor.c, mzpokeysnd.c,
  pia.c, platform.h, pokeysnd.c, sio.c, sound_unix.c, statesav.c, ui.c,
  ui_basic.c, dos/dos_ints.h, dos/dos_sb.[ch], win32/atari_win32.c,
  win32/joystick.c, win32/keyboard.c, win32/main.c, win32/screen_win32.c,
  win32/sound.c: removed CVS log from file contents


2005-10-29  Kostas Nakos  <knakos@gmail.com>
* atari.c: implementation of alternate host syncing scheme
  With USE_CLOCK undefined, normal operation requires syncing (sleeping) for
  each frame, even when refresh rate is > 1. By defining the
  ALTERNATE_SYNC_WITH_HOST symbol results in calculating skipped and the drawn
  frames, then sleeping once for a longer period. This scheme seems to yield
  better results for slow devices.


2005-10-25  Piotr Fusik  <fox@scene.pl>
* sio.c: compressed disk images are now open read-only.
  Version 1.3.6 could open them in read-write mode, but the compressed
  images were never modified, so changes were lost. It was commented
  "this is a fake but some games need it", but, since read-only ATRs
  (e.g. on a CD-ROM) cannot be open in read-write mode, why compressed
  images should be?

* antic.c, monitor.c: "VCOUNT" and "ypos" are now zero in the monitor
  invoked outside ANTIC_Frame() (previously 0x9c and 312 respectively,
  which doesn't make sense)

* atari.[ch], devices.c, ui.c, util.h: Atari800 tries to guess ROM paths
  that are not configured (no configuration file or no entries for ROM paths).
  It checks in the current directory, "/usr/share/atari800" (only on Unix
  and Linux), directory with the Atari800 binary and its "rom" and "ROM"
  subdirectories. See source code of Atari800_FindROMImages() in atari.c
  for the filenames that are checked. Note that only the presence of files
  is checked here, not their contents. This is far from perfect, but probably
  better than hard-coded default filenames (in the current directory)
  as in Atari800 1.3.6 and earlier.


2005-10-23  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: silenced a warning

* devices.c, hdevtest.lst: made H: functions 0x2f and 0x30
  SpartaDOS-compatible

* devices.c, ui_basic.c: Win32 implementation of directory listing
  no longer fails when no file matches the mask

* devices.c: Win32 implementation of long directory listing
  reports local file times rather than UTC


2005-10-22  Piotr Fusik  <fox@scene.pl>
* monitor.c: #include "pokeysnd.h" for stereo_sound (previously
  in rt-config.h)

* dos/atari_vga.c: didn't compile after removing Atari_DisplayScreen's
  argument

* atari_x11.c: XVIEW didn't compile after introducing atari_files_dir

* atari.[ch], ui.c: I forgot about configuration of tv_mode, now it's
  in "Select System"

* util.[ch], devices.c, ui_basic.c: Util_chrieq()

* ui.[ch], ui_basic.c, wince/port/ui_wince.c, wince/port/main.c:
  - display error message when SIO_Mount() fails
  - introduced MENU_* macros to hide tMenuItem structure layout
    in menu definitions
  - removed tMenuItem.sig (used by wince_ui_driver only)
  - simplified tMenuItem.flags values
  - replaced tUIDriver.fAboutBox with more general tUIDriver.fInfoScreen
  - added "tooltips" in Disk Management
  - combined "H: device" with "Use H: devices in Read Only mode"
  - added "Configure Directories" for configuration of atari_files_dir[]
    and saved_files_dir[] (thanks Petr for idea)
  - tUIDriver.fSelect now supports "dragging" (for reordering
    atari_files_dir[] and saved_files_dir[])
  - FileSelector's scrolling is less tricky and more reliable,
    as a side effect Left and Right arrows can be used to jump to first
    and last menu item respectively
  - you can quickly move in menus and file selector by pressing first
    letter of an item
  - fixed some problems with Alt+letter shortcuts
  - Alt+O no longer displays a blue line at bottom of the screen
  - moved WinCE-specific UI menu items to ui.c; only AboutPocketAtari()
    left in ui_wince.c; wince_ui_driver is history, which is good, because
    UI Driver is meant for View/Controller, not Model of User Interface;
    Kostas should review my changes, naturally
  - some naming changes to follow Atari800 convention

* atari_svgalib.c, ui_basic.c: improved SVGA_SPEEDUP:
  - now draws 1/refresh_rate part of screen every frame instead
    of every refresh_rate frames;
  - protected against problems when changing refresh_rate from UI
  - should work correctly with refresh_rate not being a divisor of 240
  - removed special handling from ui_basic.c

* atari.h, configure.ac: version 1.4.0


2005-10-19  Piotr Fusik  <fox@scene.pl>
* amiga/amiga.c: Atari_LoadAnyFile() additionally supports DCM, BAS, LST,
  CART, ROM, CAS, BOOT_TAPE

* ui.c: disks mounted as read-only now marked with '*' in Disk Management

* sio.c: initialize sio_filename[] with "Off" to match drive_status[]
  initialized with Off; simplified code by removing istmpfile[]

* amiga/amiga.c, atari_curses.c, atari_falcon.c, atari_ps2.c, atari_sdl.c,
  atari_svgalib.c, atari_vga.c, win32/atari_win32.c, wince/port/atari_wince.c,
  atari_x11.c, win32/main.c, platform.h, ui_basic.c:
  removed Atari_DisplayScreen's argument: use atari_screen directly

* util.c: Util_splitpath() and Util_catpath() recognize slash in addition
  to backslash

* rt-config.[ch], ui.c, ui_basic.c, atari_x11.c: DISK_DIR, ROM_DIR, EXE_DIR
  and STATE_DIR configuration options replaced with ATARI_FILES_DIR
  and SAVED_FILES_DIR. See discussion on the mailing list (9-11 Sep 2005).

* ui.[ch], ui_basic.c, wince/port/ui_wince.c: improved file selection:
  - file selector's title is the path of the listed directory
  - sort directories that start with a dot
  - file selector starts on the previously selected file
  - Backspace in the file selector goes to the parent directory
  - filenames of saved files are no longer limited to 32 characters
  - directory of a saved file appears in the edit box
  - Tab in the edit box invokes directory browser
  - added directory selection

* ui.[ch], ui_basic.c, wince/port/ui_wince.c:
  - removed box around screen title; screen title now always takes one line
    and is shortened if necessary
  - improved refresh_rate selection
  - added "Controller Configuration"
  - restored "Save Interlaced Screenshot" in the main menu
  - "Atari Settings" -> "Emulator Configuration": added H: paths
    and read-only, print command and ROM settings;
    the easiest way to configure ROMs is "Find ROM images in a directory"
    which looks for common names of ROM images (e.g. atarixl.rom)
  - improved disabling of function keys and Alt+letter in User Interface
    on WinCE (now using MENU_ACCEL() macro); applied to PlayStation 2, too
  - changed items[] indexing to pointer access in BasicUISelect();
    this is not a matter of optimization, since a smart compiler should
    generate same code for both - I'm 99% sure there's a bug in MSVC 6
    that caused the disabled R: menu item to appear on screen
  - some code simplifications

* devices.[ch], rt-config.[ch]:
  RtIsPrintCommandSafe() -> Device_SetPrintCommand()

* atari.c, prompts.[ch], rt-config.[ch], Makefile.in, amiga/Makefile,
  win32/msc/Makefile: removed "-configure" command-line option
  and the questions that appeared in the console window when no configuration
  file was found; now a default configuration is written and you can modify it
  using User Interface; removed prompts.[ch]

* atari.[ch], rt-config.[ch], Makefile.in, amiga/Makefile,
  win32/msc/Makefile: variables configured by the configuration file
  moved to the modules they actually belong to; config read/write moved
  to atari.[ch]; removed rt-config.[ch]


2005-10-12  Troy Ayers  <holiday42@gmail.com>
* configure.ac: For PS2 port removed check for libgcc, added check for libz.

* atari_ps2.c: Changed keyboard input to "raw" mode, as "normal" mode will not
  read directional keys.  Changed PS2 button assignments.


2005-10-09  Piotr Fusik  <fox@scene.pl>
* atari_x11.c: removed "Help" menu item disabling, because "Help" was removed
  recently

* rdevice.c: improved Device_GetInetAddress:
  - all non-control ASCII characters except space allowed (dunno if correct)
  - memory wraps at 64K
  - prevented buffer overflow

* binload.c, devices.c: use fgetc() instead of fread() for single bytes;
  start_binloading is a boolean, and should be set to TRUE or FALSE

* devices.c, rt-config.[ch]: atari_h[1-4]_dir -> atari_h_dir[0..3];
  hd_read_only -> h_read_only

* devices.[ch]: numerous improvements in H: device emulation:
  - slash, backslash, colon and greater-than are allowed H: directory
    separators on all platforms
  - parent directory on H: is "<" or ".."
  - access via H: outside the specified directories is not possible
    (I hope so!)
  - HPath -> h_exe_path, and is not modified in-place
  - fixed match(): "F?" matched "F", "FOO?BAR" matched "FOO.BAR"
  - apostrophe is valid in filenames
  - MyDOS compatible H: commands: 0x22 = mkdir, 0x29 = cd
  - H: rename command no longer allows moving files to a different directory
  - command 0x30 is "ToAbsolutePath" rather than "CurrentDirectory"
  - mkdir and rmdir no longer work in H: read-only mode
  - mkdir no longer calls umask(), and now creates directory with default
    permissions
  - H5: is no longer valid (but H6:-H9: default to the current directory)
  - apply fseek(fp, 0, SEEK_CUR) between reads and writes of a file open
    in "rb+" mode (e.g. DJGPP needs that)
  - H: directories prefixed with ':' in directory listing on MyDOS
  - base names longer than 8 characters and extensions longer than
    3 characters are truncated and terminated with '+' in directory listings
  - file size in long directory listing limited to 999999
  - long directory listing uses (SpartaDOS-compatible) 12-hour format

* ui_basic.c: silenced a warning

* win32/atari_win32.c: implemented Atari 5200 keys;
  F11 and Scroll Lock no longer press L on Atari keyboard;
  Ctrl+arrows emulate Atari arrows without Control;
  adapted to Atari800 coding style

* util/benchmark.pl: fixed program name in error messages

* util/hdevtest.lst: automatic test of H: device. Usage instructions inside.


2005-09-27  Piotr Fusik  <fox@scene.pl>
* atari_curses.c, ui_basic.c: screencode -> curses char code conversion
  is now done in curses_display_line rather than Atari_DisplayScreen:
  avoided conversion from ASCII to screencode and back in UI (it was wrong
  for some characters), this fixes Alt+O menu in Self Test

* memory.c, ui_basic.c: UI's charset is now in ATASCII order,
  so ascii_to_screen is not necessary

* monitor.c: silenced MSVC warnings

* util.h: fixed a warning about implicit declaration of unlink() in sio.c

* atari_x11.c: fixed keyboard on Motif and XView

* configure.ac: PlayStation 2 fixes; lots of small improvements


2005-09-24  Piotr Fusik  <fox@scene.pl>
* atari_ps2.c, configure.ac: added development version of the PlayStation 2
  port I'm working on together with Troy Ayers; it is limited at the moment:
  no real speed synchronization, no sound, no file selector, no monitor


2005-09-18  Piotr Fusik  <fox@scene.pl>
* cpu.c, monitor.[ch]: major improvement of monitor:
  - new command "B" manages user-defined breakpoints
    (based on Atari800Win PLus 4.0 by Marcin Lewandowski)
  - monitor now displays registers and current instruction when invoked
  - "SHOW" additionally displays current instruction
  - disassembler displays bytes before the instruction,
    to avoid misalignment where long labels are present
  - disassembler no longer displays cycles (it was misleading,
    because the number of cycles is variable for some instructions)
  - removed memory contents display in single step mode (not useful)
  - "ESCAPE" and "ESCRTS" disassembled with their argument
  - "TRON", "TROFF" -> "TRACE" (output to file, not stdout; includes
    ypos, xpos and registers)
  - "BRKHERE" -> "BBRK"
  - "BREAK" -> "BPC"
  - "YBREAK" -> "BLINE"
  - "H" is an alias to "HISTORY"
  - "ROM", "RAM" work in PAGED_ATTRIB build
  - "DLIST" groups identical instructions and prints them in one line
  - assembler supports labels
  - assembler handles "JSR 0", "LDA 0,Y" etc.
  - improved branch range checking in assembler
  - error messages for invalid "SETx" arguments
  - unofficial "NOP" and "SBC #" are marked with "!" in disassembly
  - assembler generates the official "NOP" opcode

* configure.ac: MONITOR_BREAKPOINTS ("B" command),
  MONITOR_PROFILE ("PROFILE" command), MONITOR_TRACE ("TRACE" command)

* atari.c: size of auto-started XFD images must be multiple of 128 bytes.
  Corrupted images won't work, but we gain a better detection of Atari files.

* atari.c, cpu.[ch], monitor.[ch]: break_cim -> cim_encountered
  (monitor displays "CIM encountered" not only in MONITOR_BREAK build)

* antic.[ch], cpu.c, monitor.[ch]: ypos_break_addr -> break_ypos

* cpu.c: support for Atari800Win PLus

* rt-config.[ch], ui.c: don't exit emulator if "Update configuration file"
  failed

* ui_basic.c: fixed file selector: last directory entry wasn't sorted

* ui_basic.c: right arrow in last column of file selector jumps
  to the last entry

* ui.c: improved "Extract ROM image from Cartridge":
  - allocates only as much memory as necessary rather than 1 MB
  - displays error message on write error

* ui.h, ui_basic.c, wince/port/ui_wince.c: saved a few bytes per tMenuItem

* wince/port/config.h:
  #undef HAVE_NANOSLEEP, #undef HAVE_STRDUP, #define SIZEOF_LONG 4
  (this is for use with the preprocessor, so sizeof(long) was wrong),
  #define STDC_HEADERS (this means there are stdlib.h, stdarg.h and string.h)


2005-09-14  Piotr Fusik  <fox@scene.pl>
* atari.c, configure.ac: prefer nanosleep() (POSIX.1) to usleep()
  and select(); prefer Sleep() on WIN32

* atari_x11.c: handle Motif/XView events in Atari_Keyboard() rather than
  Atari_DisplayScreen() - F1 User Interface now works in these versions;
  TODO: key repeat does not work on Motif and is too fast on XView

* pokey.c: can use Win32 API instead of time()

* rtime.c: can use Win32 API; fixed Y2K bug

* compfile.c, devices.c, sio.c, util.[ch]: Util_unlink();
  use unlink() and not remove(), because remove() calls unlink() for files
  and we never remove() directories

* util.c: fixed Util_splitpath on root directory path

* ui_basic.c: ".." in Win32 API based file selector on WINCE

* ui_basic.c: include B: in DOS_DRIVES; detect floppies on WIN32


2005-09-11  Piotr Fusik  <fox@scene.pl>
* ui_basic.c: fixed file selector which I broke yesterday

* atari.c: fixed parse error in zlib-less compilation

* atari.c, devices.c: removed unnecessary "Fatal Error" messages

* memory.c, remez.c, screen.c: use Util_malloc() instead of malloc()

* rdevice.c: avoid malloc()

* ui_basic.c: use Util_realloc() instead of realloc()

* ui.h, ui_basic.c: fixed warnings

* rtime.c: replaced "-rtime <onoff>" with "-rtime" / "-nortime"
  documented in "-help"

* devices.c: replaced "-hdreadonly <onoff>" with "-hreadonly" / "-hreadwrite"

* devices.c, monitor.c, util.[ch]: Util_strupper() and Util_strlower()

* pokey_resample.[ch]: removed dead code

* act/fox.act: removed, use jakub.act instead (it is built-in)

* monitor.c: extended labels (MONITOR_HINTS):
  - can be disabled with "LABELS OFF"
  - can be loaded with "LABELS LOAD" / "LABELS ADD"
    (supported are label tables generated by xasm, Mad-Assembler
     and HardCore Assembler)
  - can be defined with "LABELS SET"
  - you can use a label where a hex value is expected
  - binary search replaced with linear, for simplicity

* devices.c, win32/msc/config.h: H: lock/unlock work on MSVC,
  using Win32 API directly; rename, mkdir, rmdir can be implemented
  using Win32 API; Win32 API implementation of directory listing
  is now the default and does not use stat(); fixed Y2100 bug :-)

* ui_basic.c, util.[ch]: implemented file selector on MSVC

* ui_basic.c: try to handle directories with ']' in their names

* ui.c: removed an opendir() call (unnecessary, I think!)

* compfile.[ch], sio.c: removed the unused diskno parameter from opendcm()
  and openzlib()

* remez.[ch]: fprintf(stderr, ...) -> Aprint();
  adapted to Atari800 coding style; added "static" to functions;
  added "const" to pointers

* atari.h, devices.c: "defined(WIN32) || defined(__PLUS)" -> "defined(WIN32)"
  (Atari800Win PLus should define WIN32)

* dos/dos_sb.c: fixed some of gcc -pedantic warnings;
  adapted to Atari800 coding style

* win32/atari_win32.c: F6 = Help, F7 = Break; TODO: 5200 keys


2005-09-10  Piotr Fusik  <fox@scene.pl>
* configure.ac: #define our symbols to 1 (just like autoconf's own symbols);
  described basic and *curses targets

* win32/screen_win32.c: improved error handling:
  - DirectX docs suggest using FAILED() instead of !=DD_OK
  - display the name of the failed function and the return code
    (unfortunately DXTrace() is available only in DirectX 8.0 and higher)
  - display a hint if SetDisplayMode fails with DDERR_INVALIDMODE
    (the default 320x240 doesn't work on my Win98SE / Radeon 9000,
     although it works on XP on the same machine)

* ui.h, ui_basic.c: char * -> const char *

* rt-config.c, ui_basic.c, util.[ch]: simplified code by introducing
  Util_splitpath() and Util_catpath()


2005-09-09  Piotr Fusik  <fox@scene.pl>
* DOC/HOWTO-DIRTYSPAN: an alternative to DIRTYRECT (just an idea)


2005-09-07  Piotr Fusik  <fox@scene.pl>
* sound_unix.c: set speed after stereo, because the allowed speed may be
  different for stereo

* antic.c, atari.[ch], atari_falcon.c, atari_sdl.c, atari_x11.c, cartridge.c,
  cassette.c, colours.c, compfile.c, devices.c, input.c, monitor.c,
  rt-config.c, rtime.c, screen.c, sound_falcon.c, sound_unix.c, ui.c,
  ui_basic.c, util.[ch], dos/sound_dos.c, Makefile.in, amiga/makefile:
  "util" is a new useful module not related directly to the emulation

* configure.ac, list.[ch], ui_basic.c, amiga/makefile: improved file selector:
  - sorts filenames case-insensitively
  - displays "Please wait..." while the directory is read
  - uses less memory (dynamic array instead of linked list, bye-bye list.[ch])
  - faster (quicksort instead of bubblesort)

* compfile.c: fixed 32 KB memory leak per open zlib-compressed disk image

* sio.c: optimized SIO_ChkSum()

* ui.c: improved "Create Cartridge from ROM image":
  - don't exit the emulator without any cleanup if the input file cannot
    be read, display an error message instead
  - display a message for files of non-standard sizes (including files that
    are already CARTs)
  - allocate only as much memory as necessary rather than 1 MB

* ui.c: improved "Save Disk Set" and "Make blank ATR disk":
  - can be cancelled by pressing Esc while editing the filename
  - display a message on success
  - display an error message on failure
  - don't operate on NULL if fopen() fails

* ui_basic.c: shorten the messages (especially the ones with long filenames)
  to fit on screen

* antic.c, atari.c, colours.h, cpu.c, mzpokeysnd.c, pia.c, pokey.c,
  pokeysnd.c, win32/atari_win32.c, win32/joystick.c, win32/keyboard.c,
  win32/sound.c: silenced MSVC 6 /W3 warnings

* win32/main.c, win32/screen_win32.c, win32/msc/config.h, win32/msc/Makefile,
  DOC/INSTALL: DirectX version can be compiled with Microsoft 32-bit C/C++
  Compiler 6.0. Currently missing features:
  - file selector in ui_basic (one has to type the filename)
  - lock/unlock operations on H: devices
  - stereo (just haven't tested it yet)


2005-09-06  Perry McFarlane  <perry_m@fastmail.fm>
* antic.c: a fix for DMACTL written twice in the same scanline


2005-09-05  Kostas Nakos  <knakos@gmail.com>
* wince/* : Updated the wince port to work with Smartphones.
  Several other improvements to the port.


2005-09-04  Piotr Fusik  <fox@scene.pl>
* monitor.c: initialize break_addr with 0xd000. Previously, Atari800
  compiled with MONITOR_BREAK (the default) entered the monitor
  rather than executing the instruction at address 0x0000
  (perfectly legal for 6502 code).

* ui_basic.c: don't hide ATR/XFD file extensions in the file selector

* atari_svgalib.c: Atari 5200 keys

* sound_unix.c: fixed sound on Linux. This is black magic to me.
  I hope there will be some feedback from users.


2005-09-03  Piotr Fusik  <fox@scene.pl>
* atari.c, gtia.c: I broke the BASIC version recently, fixed

* cpu.c: cycle-exact Read-Modify-Write instructions for NEW_CYCLE_EXACT

* antic.c, configure.ac, gtia.c, util/benchmark.pl: removed CYCLE_EXACT
  (superseded by NEW_CYCLE_EXACT)

* devices.c: improved "K:" input in BASIC version: use just the first
  character from the entered line and ignore the remaining characters
  (including EOL). This is because the input from the terminal
  is line-buffered, so we have to press Enter for the Atari emulation
  to continue - but we don't want this Enter to be delivered
  to the emulated Atari.

* devices.c: BASIC version: Atari Clear Screen, Backspace, Tab and Bell
  converted to the corresponding ASCII codes

* atari_x11.c, configure.ac: (x11-)xview(-shm) now compiles and works

* atari_x11.c: fixed Shift+F5; F8 and (Shift+)F10 are now "Enter monitor"
  and "Save (interlaced) screenshot", respectively (just like in other
  versions of Atari800); don't clear key_shift when another key is pressed
  TODO: Alt+letter shortcuts

* atari_svgalib.c: implemented F6 (Help) and F7 (Break)

* amiga/config.h: updated for clib2-1.194


2005-08-31  Piotr Fusik  <fox@scene.pl>
* atari.[ch], ui.c: auto-starting any file supported by the emulator
  via the command line, User Interface or Alt+R

* binload.c: a fix for BASIC loader that didn't work if drive 1
  was enabled but contained no disk

* cpu.c: CYCLES_PER_OPCODE, NO_V_FLAG_VARIABLE, PC_PTR, PREFETCH_CODE
  for better (?) performance (not enabled by default);
  WRAP_64K and WRAP_ZPAGE for very precise emulation;
  optimized CPU_GetStatus(), CPU_PutStatus(), BRANCH()

* devices.c: created Device_OpenDir() and Device_ReadDir() that simplify
  searching directories. On Windows, if opendir() is not available,
  these functions are implemented using Win32 API. Changed behaviour:
  - directory listing and wildcard functions Rename, Delete, Lock, Unlock
    should now correctly handle the current directory, root directories
    and files with uppercase letters on case-sensitive filesystems
  - filenames in directory listing are no longer converted to uppercase
  - filename extension in the directory listing is now the filename part
    after the last dot and not the first one

* devices.c: improved H5:-H9:
  - reading supports CR/LF and CR files in addition to LF
  - writing uses native EOLs rather than LFs

* devices.c: Device_HHSPEC_Disk_Info(), Device_HHSPEC_Current_Dir()
  no longer use dPutByte(), so the result is wrapped at 64K,
  doesn't get written to ROM and may be written to hardware registers

* gtia.c: optimized GTIA_GetByte()

* log.c: fixed Aflushlog's bad behaviour when the log contained percents

* memory.[ch]: added two extra bytes to memory[], because the CPU
  emulation can access them

* cartridge.h, memory.[ch]: state files should now work with PAGED_ATTRIB

* boot.h, ui.c: MakeBlankDisk() now writes a blank Single Density disk
  rather than a 3-sector disk with useless executable loader - removed boot.h

* atari.[ch], colours.c, gtia.[ch], input.c, log.[ch], mzpokeysnd.[ch],
  pokey.[ch], pokeysnd.[ch], rt-config.[ch]: support for Atari800Win PLus

* util/benchmark.pl: dropped "-run" so any Atari program may be used


2005-08-27  Piotr Fusik  <fox@scene.pl>
* atari_sdl.c, atari_x11.c: now compile with --disable-sound

* cartridge.c, memory.c: cast the result of malloc()

* cassette.h: declared CASSETTE_CreateFile()

* compfile.[ch], sio.c: created compfile.h

* cpu.c: restored that "continue" at the end of the main loop

* devices.[ch]: DEFAULT_H_PATH moved to devices.h (for Atari800Win PLus)

* input.c: corrected file description

* memory.h: wrap macro arguments in parentheses, just in case

* remez.c: fixed a memory leak (found by Marcin Lewandowski)

* configure.ac, sound.c, sound_unix.c:
  renamed sound.c to sound_unix.c to avoid confusion

* statesav.c, ui_basic.c: MSVC declares getcwd() in <direct.h>

* atari.c, util/benchmark.pl: performance tests
  (some results posted to the mailing list)


2005-08-24  Piotr Fusik  <fox@scene.pl>
* atari.c: load state files from the command line using "-state"

* sio.c: recognize disk image format by the header rather than filename
  extension (*.DC3 now work as DCM)

* screen.h, ui.c: show_atari_speed, show_disk_led, show_sector_counter
  available in "Display Settings"

* devices.c: H: and R: work with PAGED_ATTRIB

* screen.c: fixed Screen_DrawAtariSpeed() not updating with refresh_rate > 1

* ui_basic.c: use stricmp() if there's no strcasecmp()

* monitor.c: people may mean accumulator mode when they write "ASL A"
  in the assembler

* atari_curses.c: keypad works on PDCurses

* cpu.[ch]: changed remember_PC_curpos and remember_jmp_curpos
  to unsigned, because "x % POWER_OF_TWO" is much faster for unsigned x
  (1 instruction vs 6 on x86)

* antic.c, monitor.[ch]: changed ypos_break_addr from UWORD to int (faster)

* cpu.c, monitor.[ch]: PROFILE -> MONITOR_PROFILE, TRACE -> MONITOR_TRACE

* monitor.c: combined consecutive printfs


2005-08-22  Piotr Fusik  <fox@scene.pl>
* cartridge.c: Atarimax cartridges can be bank-switched by reading $D5xx

* atari.c, emuos.h: stripped 2k more from emuos (it has no Floating Point,
  obviously!)

* atari.c, memory.c: don't try to load BASIC ROM in 400/800 emuos mode

* devices.c, mkimg.c, monitor.c, prompts.c, rdevice.c, sio.c:
  avoid the potentially signed-char-unsafe <ctype.h> functions (macros?)

* configure.ac: good advice for those poor souls who run "configure"
  with just "--enable-veryslow" and expect a miracle ;-)

* atari.h, ui.c: new "Display Settings" menu allows for changing the framerate
  and toggling sprite_collisions_in_skipped_frames


2005-08-21  Piotr Fusik  <fox@scene.pl>
* cartridge.[ch], ui.c: Atarimax cartridges

* atari.c, statesav.c: fixed loading of non-verbose state files

* atari.c: "--usage" and "--help" now work

* memory.[ch], sio.c: CopyFromMem and CopyToMem (both used by SIO)
  now work with hardware registers

* monitor.c: use fflush(stdout) where necessary;
  normalized all hex output to uppercase;
  improved "JUMPS": now displays the instructions;
  improved "PROFILE": now displays the instructions;
  accept "ASL @" in assembler

* rt-config.c: default filename for the 5200 ROM;
  moved Atari_ConfigInit() to the end of RtPresetDefaults(),
  so the Smartphone port can override enable_new_pokey

* screen.c: improved Screen_DrawAtariSpeed: updated every 0.5 sec or so

* sio.c: removed unportable DEBUG code

* configure.ac, statesav.c: use #ifdef HAVE_STRERROR

* configure.ac, compfile.c, devices.c: use #ifdef HAVE_REWIND

* ui.c: error messages for state load/save

* atari.[ch], compfile.c, configure.ac, devices.c: use ANSI/POSIX tmpnam()
  for creating filenames of temporary files, rather than unportable
  mktemp/mkstemp. tmpnam() generates filenames in system's temporary
  directory.

* antic.c, atari.c, atari_curses.c, gtia.c: Self Test menu highlighting
  on Curses

* atari_curses.c: fixed display of '\x7f';
  use KEY_HELP, KEY_SHELP, KEY_LHELP, KEY_BREAK, KEY_HOME, KEY_CLEAR,
  KEY_IC, KEY_IL, KEY_DC, KEY_DL, KEY_STAB, KEY_CTAB if available

* atari_sdl.c: "-rotate90" now works correctly on little-endian machines;
  don't initialize sound with "-help"; 5200 keys; F6=Help, F7=Break;
  Shift/Control for Atari, Help, Space, Return, Tab, arrows;
  Alt+B isn't repeated at a crazy speed

* atari_x11.c: MUCH faster screen display; 5200 keys; Caps can be released;
  Shift/Control for Help, Escape, Space, Return, Tab

* configure.ac: fixed x11-motif

* antic.[ch], compfile.c, input.c, screen.h, dos/atari_vga.c, ui.c:
  minor clean up


2005-08-19  Piotr Fusik  <fox@scene.pl>
* atari.c, screen.[ch]: Screen_Initialise();
  support "-screenshots <pattern>" on the command line: it defines a pattern
  for quick screenshots (i.e. the ones made with (Shift+)F10).
  For example "-screenshots /home/fred/foo##.pcx" means that
  /home/fred/foo00.pcx, /home/fred/foo01.pcx, ... should be used.
  Existing files are overwritten only if all the files defined by the pattern
  exist. Submitted as a feature request on sf.net.

* atari_curses.c: Alt+letter work on PDCurses;
  Ctrl+letter should be Control+letter, not Shift+Control+letter;
  Always treat 0x08 and KEY_BACKSPACE as Backspace;
  F10 = Screenshot (must run configure with --disable-cursesbasic to make this
  one work)

* atari.c, emuos.h: stripped 6k of zeros from emuos

* ui.[ch], ui_basic.c: shortcut keys (Alt+letter, F9, ...) didn't work in UI
  (reported as a bug on sf.net)

* monitor.c: addr defaults to regPC (handy for "D" and "LOOP");
  new command "LOOP": disassemble from the beginning of a loop that contains
  the instruction at the specified address.
  The loop is detected by looking for a branch instruction after the specified
  address whose target is below (or equal to) the specified address.
  Unconditional (JMP) loops are not detected.


2005-08-17  Piotr Fusik  <fox@scene.pl>
* configure.ac, *.c: autoconf improvements for Playstation 2;
  include config.h before system headers as autoconf's manual suggests

* configure.ac: don't use AC_FUNC_MALLOC because we never do malloc(0)

* rt-config.c: check if print_command is safe for sprintf format

* atari_x11.c, memory.[ch], ui.c: removed PILL (use cartridge images instead)


2005-08-15  Piotr Fusik  <fox@scene.pl>
* atari.c: corrected VOL_ONLY_SOUND in BASIC and CURSES_BASIC

* binload.[ch], sio.c: BIN_loade_start -> BIN_loader_start

* cpu.c: corrected cycles for unofficial opcodes 0xB3, 0xBB, 0xBF

* cpu.c: auto-define NO_GOTO for non-gccs

* cpu.[ch], monitor.c: HISTORY displays ypos xpos also with NEW_CYCLE_EXACT
  disabled

* cpu.c, memory.h: changed some | to +: this gives better code on x86 due to
  the LEA instruction

* monitor.c: "C", "M" and "S" support hardware registers

* monitor.c: display correct value for ZP,Y instruction

* monitor.c: PENL -> PENV

* cartridge.c, memory.[ch]: code simplified by defining SetROM and SetRAM
  for PAGED_ATTRIB

* devices.c: '!', '#', '$', '&', '(', ')', '-' and '@' are now valid
  in H: filenames

* atari.c, binload.[ch], cartridge.c, cpu.[ch], devices.c, ui.c:
  direct loading of Atari Basic programs. Supported are:
  - SAVEd (*.BAS) programs
  - LISTed (*.LST) programs with auto-detected Atari, LF, CR/LF or CR
    line terminators
  From the user's point of view, loading of Atari Basic programs works
  exactly like loading binary executables: use "-run" from command line
  or "Run Atari program directly" from the User Interface.
  The inner workings are much more interesting:
  0a. BIN_loader() detects file type: *.BAS programs start with two 0x00 bytes,
      *.LST programs must start with a digit.
  0b. During coldstart Atari Basic is enabled, even if disable_basic is set.
  0c. Device_PatchOS() installs a patch for E: write.
  1. The "READY" prompt is expected on E:. This is not necessarily
     the first thing printed on E: - a DOS may print its messages before running
	 Atari Basic.
  2. RUN "E:" (for *.BAS) or ENTER "E:" (for *.LST) is passed to Atari Basic
     via E:.
  3. A patched E: open handler installs handlers for read and close operations.
  4. Reading bytes from the file. A conversion is applied to *.LST files:
     first 0x9b, (0x0d,0x0a), 0x0d or 0x0a found in the file becomes the line
	 terminator and is converted to 0x9b.
  5. Close file. Patches are removed.
  6. (for *.LST) The "READY" prompt is expected on E:. If something different
     appears (probably "ERROR"), skip the step 7.
  7. (for *.LST) "RUN" is passed to Atari Basic via E:.


2005-08-14  Piotr Fusik  <fox@scene.pl>
* dos/dos_sb.c, dos/sound_dos.c: stereo now works

* dos/atari_vga.c, dos/sound_dos.h: sound_dos.h removed, use sound.h instead

* rt-config.c: support 16, 576, 1088 RAM; skip non-working options

* ui_basic.c: avoid negative array indexes with special keys pressed in UI


2005-08-13  Piotr Fusik  <fox@scene.pl>
* atari_curses.c: TAB is now TAB rather than CONTROL+I;
  F8 is "enter monitor" not coldstart;
  Start, Select, Option can now be released;
  fixed -wide2 mode

* antic.c, atari.c, atari_curses.c: generate curses screen basing on the DL
  rather than OS screen - Self Test and halt screen of emuos are now visible

* configure.ac: support --target x11-shm, x11-motif, x11-xview, x11-xview-shm;
  changed hints for symbols in config.h to full sentences,
  to be consistent with autoconf-generated hints;
  fixed hint for VOL_ONLY_SOUND; lack of zlib is no fatal error;
  check for signal.h, termios.h, memmove, signal, strspn;
  CURSES_BASIC; no sound objects if SOUND disabled

* antic.c, atari.c, configure.ac, gtia.c, input.c, ui.c, ui_basic.c:
  CURSES version without bitmap screen generation (i.e. no screenshots)
  enabled with CURSES_BASIC - faster and smaller, enabled by default

* cartridge.c, cassette.[ch], pokey.[ch], sio.c: fixed warnings

* antic.[ch], gtia.c, pokey.c, statesav.[ch], ui_basic.c: fixed indentation

* ui.c: not compiled-in features don't show in menus

* cartridge.c, sio.c, statesav.[ch]: added functions for filename save/read

* configure.ac, Makefile.in, ui.c: no sound emulation if sound is disabled


2005-08-10  Piotr Fusik  <fox@scene.pl>
* atari_basic.c: sound support; don't link with input.o

* atari.c: BASIC and VERY_SLOW now generate all kinds of interrupts.
  This generally means that you can hear music and SIO works without a patch.
  Timing in these versions is now much more precise.

* antic.[ch], monitor.c: "dlist" in monitor now supports Display Lists
  in extended memory with exclusive Antic access

* devices.c: patching E: open doesn't make sense

* cassette.c, ui.c: hold_start_on_reboot moved to cassette.c

* antic.c, cartridge.c, gtia.c, memory.c, pia.c, pokey.c, sio.c:
  no state files in BASIC version

* configure.ac, Makefile.in: link cycle_map.o only for NEW_CYCLE_EXACT;
  CYCLE_EXACT, NEW_CYCLE_EXACT, CRASH_MENU, VERY_SLOW not available in BASIC
  version; input.o, screen.o, colours.o, statesav.o, list.o, ui_basic.o, ui.o
  not linked in BASIC version

* atari.c, cpu.c, gtia.c, pia.c, pokey.c: input.o and statesav.o not linked
  in BASIC version

* Makefile.in: "make clean" now additionally cleans dos/, falcon/ and win32/

* mzpokeysnd.c, pokeysnd.[ch], sndsave.[ch]: Sound Recording was designed
  only for 8-bit unsigned samples mono on little-endian machines. Even in this
  configuration it didn't work, because the frequency wasn't written
  in the header (and you should have selected old pokeysnd in order to have
  any samples in the file). Now 8-bit unsigned samples mono/stereo old/new
  Pokey should work on all machines. 16-bit and signed samples are still TODO.

* ui.c: Sound Recording to atari000.wav, atari001.wav, etc. rather than 0.raw,
  1.raw. Doesn't overwrite existing files now. TODO: prompt for filename.

* atari.c: close sound file at exit, so correct headers are written

* antic.c, cartridge.[ch], cpu.c, emuos.h, gtia.c: added consts

* antic.c: fixed code formatting

* configure.ac: small fix for ncurses and support for pdcurses

* atari_curses.c: backspace now works on DJGPP/pdcurses


2005-08-07  Piotr Fusik  <fox@scene.pl>
* mzpokeysnd.c: eschew traditional comments in log messages!

* devices.c: MSVC headers have no S_IRUSR nor S_IWUSR

* devices.c: empty Hx_DIR now refers to the current directory rather than
  the root

* ui.c: display error messages for "Run BIN file", "Select tape",
  "Insert cartridge" and "Save screenshot"

* compfile.c: fixed indentation; other minor improvements


2005-08-06  Piotr Fusik  <fox@scene.pl>
* configure.ac, devices.c: check for rename() and snprintf()

* devices.c: fixed error codes; fixed "unused" warnings; other minor fixes

* antic.[ch], atari_sdl.c, atari_x11.c, cassette.[ch], cycle_map.h,
  pokeysnd.[ch], screen.h, ui.[ch], ui_basic.c, dos/atari_vga.c, dos/vga_gfx.h:
  changed () function signatures to (void)

* antic.c, atari_sdl.c, atari_x11.c, cassette.c, cycle_map.c, monitor.c,
  pokeysnd.c, ui_basic.c: fixed indentation

* rtime.c: optimized RTIME_GetByte

* mzpokeysnd.c, pokey.c, pokeysnd.h, pokey_resample.c, prompts.c:
  // comments changed to /* */

* emuos.lis, emuos.h, ui_basic.c: updated copyright year

* atari.c: if no sleep-like function available, fall back to time polling

* monitor.c: fixed a warning


2005-08-05  Piotr Fusik  <fox@scene.pl>
* configure.ac: added checks for some headers and functions used in devices.c
  and atari.c.
  VERY IMPORTANT: if you don't use Configure, make sure you define HAVE_*
  symbols (in config.h) for the header files and functions you have.

* sio.c: getcwd() may be unavailable

* devices.c, devices.h: fancy I/O functions may be unavailable;
  got rid of numerous #ifdef BACK_SLASH

* statesav.c: ReadDisabledROMs wasn't actually called!
  Thank you GCC 4 for the warning.

* atari.c: use best time functions available - now checked by Configure,
  not hard-coded for platforms (almost...)


2005-06-24  Piotr Fusik  <fox@scene.pl>
* sio.c: fixed PERCOM configuration (spotted by Erhard Puetz):
  - 1 track, 1 side for non-standard disk images (i.e. exactly 65535 sectors
    for 65535 sectors image)
  - 80 tracks for standard 720K, 1.44M and 2.88M disks
  - MFM byte is 0 for SD, 4 otherwise
  - unused bytes are set to 0


2005-05-20  Piotr Fusik  <fox@scene.pl>
* antic.c, sndsave.h, ui_basic.c: fixed an error and some warnings reported
  by GCC 4.0.0


2005-05-13  James Wilkinson  <james@slor.net>
* win32/atari_win32.c, win32/joystick.[ch], win32/main.c: added DirectX
  joystick support

* win32/atari_win32.c: cleaned up initialization with nonexistent config file